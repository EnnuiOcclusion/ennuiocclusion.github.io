#+OPTIONS: toc:nil
#+BEGIN_SRC markdown
---
layout: post
title: Org-Mode for Jekyll
date:   2017-12-27 18:38:15 -0800
categories: meta
---
#+END_SRC

* Org-Mode Structure

I love using org-mode to structure ideas into documentation. I've just started this blog using Jekyll, but I'd love for the posts to be written in org-mode rather the straight markup. I've got some plans for the future about how I might want to swap out the static-site generator and also do a bit of literate programming. Org-mode really shines in these tasks, so let's get set up for success now.

This post is a test to understand how exactly I could go about doing that. Let's see how it goes.

* Testing

In order to test the site I need to build it. The code to do so looks a little like follows from the project root-directory.

#+BEGIN_SRC bash
  bundle exec jekyll build
#+END_SRC

* First Try - Do Nothing

My first attempt at this is just to see if it might secretly be a default feature of Jekyll, a bit like how you can just stick org files of Github and have it automatically convert to Markdown. This does not work. Putting this file in the ~_posts~ folder does make it show up, but clicking the link begins downloading the actual org file. No Bueno.

* Second Try - Using org-mode export to Markdown

Using the org-export function to markdown, which in spacemacs is mapped to ~, e e~ you can export directly to markdown. This get's read by Jekyll as markdown, but gives browser default html, with none of our links or static site goodness. We must go deeper.

* Third Try - Once More With Feeling

Turns out the markdown export can work, we just need to coax the file into an something Jekyll wants to play with. There's a few tasks we need to accomplish, getting rid of the table of contents on export, introducing the front matter for the post, and changing the exported file extension.


** Removing the Table of Contents

This one's pretty simple and just consists of adding this line to the head of your org file.

#+BEGIN_SRC org
  ,#+OPTIONS: toc:nil
#+END_SRC

** Introducing Front Matter

This is all the metadata that Jekyll uses to title and format your blog post. It needs to be repeated verbatim at the front of the markdown document. We can use Org's src block functionality to do this with something this:

#+BEGIN_SRC org
  ,#+BEGIN_SRC markdown
  ---
  layout: post
  title: Org-Mode for Jekyll
  date:   2017-12-27 18:38:15 -0800
  categories: meta
  ---
  ,#+END_SRC
#+END_SRC

One of the very nice thing's about org-mode is how easy it is to pop in and configure these blocks for literate programming, all you need to do is hit ~< e TAB~ then enter the name of the language for that source block and you're good to go. You can then with spacemacs hit ~, '~ to pop open a new buffer that's in the major mode for the language of that source block. Hit ~, c~ to save your changes back into your original buffer.

You're good to export with ~, e e m o~. <sup>You don't actually have to remember these commands they pop up in the mini-buffer as you start typing in spacemacs.</sup>

There is just one last problem with the front matter that needs to be fixed. There's about for spaces in front of each line from the exporter, you need to delete these for them to be properly parsed by Jekyll.

** File Extension

This one got me tripped up for a little longer than I'd like to admit.  Jekyll apparently looks for files with a full ~.markdown~ extension. If you have just the ~.md~ extensions that comes out of the org-export you will get a post takes web brutalism to heart. So rename and you're good to go. Now Jekyll will process this file as if you'd written it in regular Markdown and you're ready to keep on cooking.

* Next Steps

Now that the basic idea has proven feasible and I know the basic tasks that need to be accomplished, let's build some tools to automate all this in a future post.
